buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // Needed for bytecode manipulation
        classpath 'org.ow2.asm:asm-all:5.2'
    }
}

plugins {
  id 'java-library'
  id 'maven-publish'
  id 'eclipse'
  id 'net.minecrell.licenser' version '0.3'
  id 'org.ajoberstar.grgit' version '2.3.0'
  //id 'com.github.johnrengelman.shadow' version '2.0.4'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

group = 'net.minecraftforge'
version = gitVersion()

def gitVersion() {
    def raw = grgit.describe(longDescr: true)
    def desc = (raw == null ? 'unknown-unknown-unknown' : raw).split('-') as List
    def hash = desc.remove(desc.size() - 1)
    def offset = desc.remove(desc.size() - 1)
    def tag = desc.join('-')
    def branch = grgit.branch.current().name
    return "${tag}.${offset}" //${t -> if (branch != 'master') t << '-' + branch}"
}

sourceSets {
    api
    shared
    gradlecomp
    java9
}

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    sharedImplementation.extendsFrom apiImplementation
    gradlecompImplementation.extendsFrom sharedImplementation

    compile.extendsFrom sharedImplementation
    compile.extendsFrom gradlecompImplementation
}

dependencies {
    java9Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }
    
    sharedImplementation sourceSets.api.output
    sharedImplementation 'commons-io:commons-io:2.4'

    gradlecompImplementation sourceSets.shared.output
    gradlecompImplementation gradleApi()
    gradlecompImplementation 'com.google.guava:guava:26.0-jre'
    gradlecompImplementation 'commons-io:commons-io:2.4'

    compile sourceSets.api.output
    compile sourceSets.shared.output
    compile sourceSets.gradlecomp.output
}


// Default all standard Java compile tasks to Java 8
// We'll specify Java 9 only for the java9 compile task
tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
    options.deprecation = true
}
tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(8)
    }
}
java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

project(':artifactural9') {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    group = rootProject.group
    java.toolchain.languageVersion = JavaLanguageVersion.of(9)

    sourceSets {
        java9.java.srcDirs = [rootProject.file('src/java9').getAbsolutePath()]
    }
    
    eclipse {
        project {
            name rootProject.name + '9'
            linkedResource name: 'java9', type: '2', location: rootProject.file('src/java9').getAbsolutePath()
        }
        jdt {
            sourceCompatibility = targetCompatibility = 9
        }
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'utf-8'
        javaCompiler = javaToolchains.compilerFor {
            languageVersion = JavaLanguageVersion.of(9)
        }
    }
}



jar {
    from sourceSets.api.output
    from sourceSets.shared.output
    from(sourceSets.gradlecomp.output)

    into('META-INF/versions/9') {
        from project(':artifactural9').sourceSets.java9.output
    }
    
    manifest {
        attributes(
            'Multi-Release': 'true'
        )
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.api.allSource
    from sourceSets.shared.allSource
    from sourceSets.gradlecomp.allSource
}


license {
    header = file("$rootDir/LICENSE-header.txt")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourcesJar
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                name = project.archivesBaseName
                packaging = 'jar'
                description = 'A Gradle artifact processing and management tool'
                url = 'https://github.com/MinecraftForge/Artifactural/'

                scm {
                    url = 'https://github.com/MinecraftForge/Artifactural/'
                    connection = 'scm:git:git://github.com/MinecraftForge/Artifactural.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/Artifactural.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/Artifactural/issues'
                }
                licenses {
                    license {
                        name = 'LGPL-2.1'
                        url = 'https://www.gnu.org/licenses/lgpl-2.1.txt'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            if (project.hasProperty('mavenPassword')) {
                credentials {
                    username = project.properties.mavenUser
                    password = project.properties.mavenPassword
                }
                url 'https://files.minecraftforge.net/maven/manage/upload'
            } else {
                url 'file://' + rootProject.file('repo').getAbsolutePath()
            }
        }
    }
}

